[{"C:\\Users\\meghanagb\\Desktop\\dojo-blog\\src\\index.js":"1","C:\\Users\\meghanagb\\Desktop\\dojo-blog\\src\\App.js":"2","C:\\Users\\meghanagb\\Desktop\\dojo-blog\\src\\Navbar.js":"3","C:\\Users\\meghanagb\\Desktop\\dojo-blog\\src\\Home.js":"4","C:\\Users\\meghanagb\\Desktop\\dojo-blog\\src\\BlogList.js":"5","C:\\Users\\meghanagb\\Desktop\\dojo-blog\\src\\useFetch.js":"6","C:\\Users\\meghanagb\\Desktop\\dojo-blog\\src\\Create.js":"7","C:\\Users\\meghanagb\\Desktop\\dojo-blog\\src\\BlogDetails.js":"8","C:\\Users\\meghanagb\\Desktop\\dojo-blog\\src\\NotFound.js":"9"},{"size":432,"mtime":1639111121346,"results":"10","hashOfConfig":"11"},{"size":711,"mtime":1640181403424,"results":"12","hashOfConfig":"11"},{"size":411,"mtime":1639751979973,"results":"13","hashOfConfig":"11"},{"size":639,"mtime":1639751569036,"results":"14","hashOfConfig":"11"},{"size":443,"mtime":1639810750100,"results":"15","hashOfConfig":"11"},{"size":1184,"mtime":1639807355702,"results":"16","hashOfConfig":"11"},{"size":2616,"mtime":1640025323370,"results":"17","hashOfConfig":"11"},{"size":1210,"mtime":1640178613605,"results":"18","hashOfConfig":"11"},{"size":303,"mtime":1640181321697,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"rm0rcw",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\meghanagb\\Desktop\\dojo-blog\\src\\index.js",[],["40","41"],"C:\\Users\\meghanagb\\Desktop\\dojo-blog\\src\\App.js",[],"C:\\Users\\meghanagb\\Desktop\\dojo-blog\\src\\Navbar.js",[],"C:\\Users\\meghanagb\\Desktop\\dojo-blog\\src\\Home.js",["42","43"],"import { useEffect, useState } from \"react\";\nimport BlogList from \"./BlogList\";\nimport useFetch from \"./useFetch\";\n\nconst Home = () => {\n  const {data: blogs, isPending, error} = useFetch('http://localhost:800/blogs');\n\n  // {data: blogs} means the data is called as blogs , it passes the same data values in the blogs or also called as alias names\n  \n\n  return (\n    <div className=\"home\">\n      {error && <div>{error}</div>}\n      {isPending && <div>Loading...</div>}\n      {blogs && <BlogList blogs={blogs} />}\n    </div>\n  );\n}\n \nexport default Home;\n\n// COMMAND TO RUN THE JSON FILE\n// npx json-server --watch data/db.json --port 8000","C:\\Users\\meghanagb\\Desktop\\dojo-blog\\src\\BlogList.js",[],"C:\\Users\\meghanagb\\Desktop\\dojo-blog\\src\\useFetch.js",[],"C:\\Users\\meghanagb\\Desktop\\dojo-blog\\src\\Create.js",[],"C:\\Users\\meghanagb\\Desktop\\dojo-blog\\src\\BlogDetails.js",[],"C:\\Users\\meghanagb\\Desktop\\dojo-blog\\src\\NotFound.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":10,"nodeType":"50","messageId":"51","endLine":1,"endColumn":19},{"ruleId":"48","severity":1,"message":"52","line":1,"column":21,"nodeType":"50","messageId":"51","endLine":1,"endColumn":29},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]